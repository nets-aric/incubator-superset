# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""add_metadata_column_to_annotation_model.py

Revision ID: 997a47311eb4
Revises: 1412ec1e5a7b
Create Date: 2021-04-23 11:09:50.684988

"""

# revision identifiers, used by Alembic.
revision = '997a47311eb4'
down_revision = '1412ec1e5a7b'

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('s3_export_schedules',
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('changed_on', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('crontab', sa.String(length=50), nullable=True),
    sa.Column('slice_id', sa.Integer(), nullable=True),
    sa.Column('s3_path', sa.String(length=50), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['slice_id'], ['slices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_s3_export_schedules_active'), 's3_export_schedules', ['active'], unique=False)

    with op.batch_alter_table('dashboard_email_schedules', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_body', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('email_subject', sa.String(length=128), nullable=True))

    with op.batch_alter_table('slice_email_schedules', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_body', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('email_subject', sa.String(length=128), nullable=True))
    # ### end Alembic commands ###
